Дан массив различных целых чисел. Надо найти индекс локального минимума в этом массиве.
Необходимо реализовать алгоритм с минимальной асимптотической сложностью.

Локальный минимум - это такой элемент массива a_i, что a_{i-1} > a_i < a_{i+1}.
Для начала и конца массива условие локального минимума, соответственно: a0 < a1 и a_n < a_{n-1}.

Решение:
    Допущение: считаем вероятность равенства соседних элементом событием маловероятным и пренебрегаем такой возможностью.
    (N существенно меньше диапазона возможных значений a_i)

    Тогда вероятность того, что a_i > a{i+1) есть 1/2
    Получается, что вероятность найти локальный минимум на границах массива 1/2
    Вероятность a_i >a {i+1} < a_i+1 есть 1/2*1/2 = 1/4

    Т.е. вероятность того, что локальный минимум найдётся на первых 3х элементах очень близка к единице.
    Алгоритм:
        1. Ищем локальный минимум на границах массива.
        2. Ищем локальный минимум, начиная со второго элемента.

    Сложность алгоритма.
    В худшем случае локальный минимум найдётся в N-1м элементе.
    Сложность 2(n-1) -> O(n)
    В среднем локальный минимум должен найтись на одной из границ, т.е.
    Cложность O(1)

Запуск тестов:
    Task1 <путь к файлу с тестовыми данными>

Описание полей TestSet.json:
    "name" - описание теста, текстовая строка
    "data" - массив целых чисел, данные на которых ищется локальный минимум
    "result" - ожидаемый результат теста индекс локального минимума в массиве "data" или -1, если локального минимума нет.

