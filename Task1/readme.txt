Дан массив различных целых чисел. Надо найти индекс локального минимума в этом массиве.
Необходимо реализовать алгоритм с минимальной асимптотической сложностью.

Локальный минимум - это такой элемент массива a_i, что a_{i-1} > a_i < a_{i+1}.
Для начала и конца массива условие локального минимума, соответственно: a0 < a1 и a_n < a_{n-1}.

Решение:
    Начальная установка:
        Устанавливаем down в true.
    Цикл:
        Если down, и a[i] < a[i+1], то локальный минимум найден. Его индекс i.
        Иначе down <- (a[i] > a[i+1])
        i <- i+1
    Продолжаем цикл, пока i < n-1
    Если down, то локальный минимум найден. Его индекс n-1.
    Иначе локальный минимум не найден.

Сложность алгоритма:
    1. Внешний цикл работает в худшем случае n-1 раз
    2. В теле цикла значения массива читаются 2 раза, т.е. сложность = 2(n-1) -> O(n)
    Итого сложность:
        Худший случай: O(n)
        Т.е. асимптотическая сложность O(n) и быnm лучше не может.